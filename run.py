import streamlit as st

from langchain.schema import HumanMessage, SystemMessage
from langchain.chat_models.gigachat import GigaChat
from Levenshtein import distance

st.markdown(
    """
<style>
.stApp [data-testid="stToolbar"]{
    display:none;
}
</style>
""",
    unsafe_allow_html=True,
)

chat = GigaChat(
    credentials=st.secrets["GIGAAUTH"],
    verify_ssl_certs=False,
    model="GigaChat-Pro",
)

chat_lite = GigaChat(
    credentials=st.secrets["GIGAAUTH"],
    verify_ssl_certs=False,
)
prompts = [
    SystemMessage(
        content='\
–¢—ã –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∫–æ–ª–ª-—Ü–µ–Ω—Ç—Ä–∞ —Å –æ–ø—ã—Ç–æ–º –±–æ–ª–µ–µ 10 –ª–µ—Ç.\n\
–û—Ü–µ–Ω–∏ –æ—Ç–≤–µ—Ç [–°–æ—Ç—Ä—É–¥–Ω–∏–∫] –Ω–∞ –∑–∞–ø—Ä–æ—Å [–ö–ª–∏–µ–Ω—Ç], –∑–Ω–∞—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã –æ—Ç–≤–µ—Ç [–≠—Ç–∞–ª–æ–Ω] –ø–æ –∫—Ä–∏—Ç–µ—Ä–∏—è–º:\n\
1. –°–º—ã—Å–ª–æ–≤–∞—è —Å—Ö–æ–∂–µ—Å—Ç—å: –°—Ä–∞–≤–Ω–∏ –æ—Ç–≤–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ —Å —ç—Ç–∞–ª–æ–Ω–æ–º.\n\
2. –ö–ª–∏–µ–Ω—Ç–æ–æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å: –û—Ü–µ–Ω–∏ —É—Ä–æ–≤–µ–Ω—å —Å–µ—Ä–≤–∏—Å–∞ –≤ –æ—Ç–≤–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –æ–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∫–ª–∏–µ–Ω—Ç—É. –û–±—Ä–∞—â–µ–Ω–∏–µ –Ω–∞ "—Ç—ã" —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞—Å–æ–ª—é—Ç–Ω–æ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–º.\n\
3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∂–∏: –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∂–∏ —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–≤–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. {–£–º–µ—Å—Ç–Ω–æ. –û—Ü–µ–Ω–∫–∞: 1 / –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ/–ù–µ—É–º–µ—Å—Ç–Ω–æ. –û—Ü–µ–Ω–∫–∞: 0} \n\
4. –ü–æ–Ω—è—Ç–Ω–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞: –û—Ü–µ–Ω–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∏ —è—Å–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –≤ –æ—Ç–≤–µ—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ü—Ä–æ–≤–µ—Ä—å, –Ω–∞—Å–∫–æ–ª—å–∫–æ –ª–µ–≥–∫–æ —Ç–µ–∫—Å—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–Ω—è—Ç –∫–ª–∏–µ–Ω—Ç—É.\n\
–ö–∞–∂–¥–æ–º—É –ø—É–Ω–∫—Ç—É, –∫—Ä–æ–º–µ "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç–º–æ–¥–∂–∏", –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —á–∏—Å–ª–µ–Ω–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –æ—Ç 0 –¥–æ 5, –≥–¥–µ 5 –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º, –∞ 0 ‚Äî –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ.\n\
–û–±–æ—Å–Ω—É–π –∫–∞–∂–¥—É—é –æ—Ü–µ–Ω–∫—É, —É–∫–∞–∑—ã–≤–∞—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –ø—Ä–∏–º–µ—Ä—ã –∏–∑ —Ç–µ–∫—Å—Ç–∞.\n\
\n\
–í —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å –∏—Ç–æ–≥ —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.\n\
–ò—Ç–æ–≥ –Ω–∞—á–∏–Ω–∞–π —Ñ—Ä–∞–∑–æ–π "–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: X –∏–∑ 16.\n–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è:"\
'
    )
]

dialog = [
    (
        "–ú–µ–Ω—è —É–∂–µ —Ç—Ä—è—Å–µ—Ç –æ—Ç –≤–∞—à–µ–≥–æ –∫–æ–Ω—Ç–∞–∫—Ç-—Ü–µ–Ω—Ç—Ä–∞. –û–±—ä—è—Å–Ω–∏—Ç–µ, –Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ –∫–∞–∫–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –≤–∞—à–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ —Å–∞–º–∏ –ø—Ä–µ—Ä—ã–≤–∞—é—Ç —Å–≤—è–∑—å?",
        "–°–æ–∂–∞–ª–µ—é, —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–∞–∫–∞—è —Å–∏—Ç—É–∞—Ü–∏—è. –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á—Ç–æ —É –í–∞—Å —Å–ª—É—á–∏–ª–æ—Å—å?",
    ),
    (
        "–ñ–∞–ª–æ–±—É –ø–∏—à–∏—Ç–µ –¥–∞–≤–∞–π—Ç–µ!!!",
        "–Ø –∏—Å–∫—Ä–µ–Ω–Ω–µ —Ö–æ—á—É –í–∞–º –ø–æ–º–æ—á—å! –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å –∫–∞–∫–∏–º –≤–æ–ø—Ä–æ—Å–æ–º –í—ã –æ–±—Ä–∞—â–∞–ª–∏—Å—å?",
    ),
    (
        "–ù–µ –Ω–∞–¥–æ —Å–ø—Ä–∞—à–∏–≤–∞—Ç—å, –∫–∞–∫–æ–π —É –º–µ–Ω—è –≤–æ–ø—Ä–æ—Å! –ü–∏—à–∏—Ç–µ –∂–∞–ª–æ–±—É!!!",
        "–•–æ—Ä–æ—à–æ. –î–∞–≤–∞–π—Ç–µ —Å–≤–µ—Ä–∏–º –í–∞—à—É —Ñ–∞–º–∏–ª–∏—é, –∏–º—è, –æ—Ç—á–µ—Å—Ç–≤–æ –∏ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è. –ù–∞–∑–æ–≤–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞.",
    ),
    (
        "–ó–∞—á–µ–º? –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ —Å–∞–º–∏ –Ω–∞–π—Ç–∏? ... –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–æ–≤–∏—á, 15 –º–∞—è 1980. –ß—Ç–æ –µ—â–µ –≤–∞–º —Ç–∞–º –æ—Ç –º–µ–Ω—è –Ω—É–∂–Ω–æ?!",
        "–°–ø–∞—Å–∏–±–æ, —è –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å —Å–æ–æ–±—â—É —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—é –æ–± —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏, –æ–Ω –ø—Ä–∏–º–µ—Ç –≤—Å–µ –º–µ—Ä—ã.",
    ),
    (
        "–õ–∏—à–∏—Ç–µ –ø—Ä–µ–º–∏–∏ –Ω–µ—Ä–∞–¥–∏–≤–æ–≥–æ! –Ø –Ω–µ —Ö–æ—á—É –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑ —Ç—Ä–∞—Ç–∏—Ç—å —Å—Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è –Ω–∞ –≤–∞—Å. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥–∞–ª–∏?",
        "–î–∞, –±—É–¥—å—Ç–µ —É–≤–µ—Ä–µ–Ω—ã. –Ø –∂–µ–ª–∞—é –í–∞–º –ø–æ–º–æ—á—å, —Å –∫–∞–∫–∏–º –≤–æ–ø—Ä–æ—Å–æ–º –í—ã –æ–±—Ä–∞—â–∞–ª–∏—Å—å?",
    ),
    ("–ù–µ—Ç, —è —É–∂–µ –≤—Å–µ —É–∑–Ω–∞–ª. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è.", "–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!"),
]
client_idx = 0
target_idx = 1
user_prefix = "[–°–æ—Ç—Ä—É–¥–Ω–∏–∫]"
reference_prefix = "[–≠—Ç–∞–ª–æ–Ω]"
client_prefix = "[–ö–ª–∏–µ–Ω—Ç]"
trainer_prefix = "[–°–∏—Å—Ç–µ–º–∞]"

# Chat init
if "messages" not in st.session_state:
    st.session_state.curr_answer = 0
    st.session_state.messages = []
    st.session_state.next_content = dialog[st.session_state.curr_answer]
    st.session_state.messages.append(
        {
            "role": "assistant",
            "avatar": "üë©‚Äçüè´",
            "content_type": ["text"],
            "content": [st.session_state.next_content][client_idx],
        }
    )
    st.session_state.prompts = prompts
    st.session_state.n_answers = len(dialog)

st.title("–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–∞–∂–µ—Ä –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")

# Cache
for x in st.session_state.messages:
    with st.chat_message(name=x["role"], avatar=x["avatar"]):
        for i, content_type in enumerate(x["content_type"]):
            if content_type == "text":
                st.write(x["content"][i])
            elif content_type == "expand":
                with st.expander(x["content"][i][0]):
                    st.write(x["content"][i][1])

# Main application loop
if st.session_state.curr_answer < st.session_state.n_answers:
    if content := st.chat_input("–í–∞—à –æ—Ç–≤–µ—Ç:"):
        with st.chat_message("user", avatar="üôÇ"):
            st.write(content)
            st.session_state.messages.append(
                {
                    "role": "user",
                    "avatar": "üôÇ",
                    "content_type": ["text"],
                    "content": [content],
                }
            )

        prompts_typo = [
            HumanMessage(
                content=f"–ü–µ—Ä–µ–ø–∏—à–∏ —Ç–µ–∫—Å—Ç, –∏—Å–ø—Ä–∞–≤–∏–≤ –≥—Ä–∞–º–º–∞—Ç–∏—á–µ—Å–∫–∏–µ, –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –∏ –ø—É–Ω–∫—Ç—É–∞—Ü–∏–æ–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ.\n–¢–µ–∫—Å—Ç: {content}\n–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç:"
            )
        ]
        res_typo = chat_lite(prompts_typo).content
        typo_score = 5 - min(distance(content, res_typo), 5)

        prompt = f"{client_prefix} {st.session_state.next_content[client_idx]}\n\
                    {reference_prefix} {st.session_state.next_content[target_idx]}\n\
                    {user_prefix} {content}\
                    "

        st.session_state.prompts.append(HumanMessage(content=prompt))

        with st.chat_message("assistant", avatar="üë©‚Äçüè´"):
            res = ""
            with st.spinner(text="–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–∞—à –æ—Ç–≤–µ—Ç..."):
                res = chat(st.session_state.prompts).content
            try:
                answer, rep_part = res.split("–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞:")
            except ValueError:
                answer = res
                rep_part = ""

            answer = (
                f"{answer}\n–ò—Ç–æ–≥–æ–≤–∞—è –æ—Ü–µ–Ω–∫–∞: {int(rep_part[:3])+typo_score} –∏–∑ 21.\n"
            )

            rep_part = rep_part[10:]

            if typo_score == 5:
                message_typo = "\n–û—Ü–µ–Ω–∫–∞ –ì—Ä–∞–º–º–∞—Ç–∏–∫–∏: –û—à–∏–±–æ–∫ –Ω–µ—Ç. –û—Ü–µ–Ω–∫–∞: 5/5."
            else:
                message_typo = f'\n–û—Ü–µ–Ω–∫–∞ –ì—Ä–∞–º–º–∞—Ç–∏–∫–∏: –ù–∞–π–¥–µ–Ω—ã –æ–ø–µ—á–∞—Ç–∫–∏. –ò—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "{content}", –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: "{res_typo}". –û—Ü–µ–Ω–∫–∞: {typo_score}/5.'

            st.write(f"{trainer_prefix}\n{message_typo}\n{answer}")

            report = [
                "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è",
                rep_part,
            ]
            target = [
                "–≠—Ç–∞–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç",
                dialog[st.session_state.curr_answer][target_idx],
            ]
            with st.expander(target[0]):
                st.write(target[1])
            if report[1]:
                with st.expander(report[0]):
                    st.write(report[1])

            st.session_state.messages.append(
                {
                    "role": "assistant",
                    "avatar": "üë©‚Äçüè´",
                    "content_type": ["text", "expand"],
                    "content": [
                        f"{trainer_prefix}\n{message_typo}\n{answer}",
                        target,
                    ],
                }
            )
            if report[1]:
                st.session_state.messages[-1]["content_type"].append("expand")
                st.session_state.messages[-1]["content"].append(report)

        # Clean conversation history
        st.session_state.prompts = st.session_state.prompts[:-1]

        # Write next task
        st.session_state.curr_answer += 1
        if st.session_state.curr_answer < st.session_state.n_answers:
            st.session_state.next_content = dialog[st.session_state.curr_answer]

            with st.chat_message("assistant", avatar="üë©‚Äçüè´"):
                st.write(st.session_state.next_content[client_idx])

            st.session_state.messages.append(
                {
                    "role": "assistant",
                    "avatar": "üë©‚Äçüè´",
                    "content_type": ["text"],
                    "content": [st.session_state.next_content[client_idx]],
                }
            )

    if st.session_state.curr_answer > 0 and st.button("‚Üª –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ"):
        st.session_state.curr_answer -= 1
        st.session_state.next_content = dialog[st.session_state.curr_answer]
        with st.chat_message("assistant", avatar="üë©‚Äçüè´"):
            st.write(st.session_state.next_content[client_idx])

        st.session_state.messages = st.session_state.messages[:-3]
        st.rerun()

else:
    st.write("–ó–∞–¥–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, —Å–ø–∞—Å–∏–±–æ!")
    if st.button("‚Üª –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ"):
        st.session_state.curr_answer -= 1
        st.session_state.next_content = dialog[st.session_state.curr_answer]
        with st.chat_message("assistant", avatar="üë©‚Äçüè´"):
            st.write(st.session_state.next_content[client_idx])

        st.session_state.messages = st.session_state.messages[:-2]
        st.rerun()
